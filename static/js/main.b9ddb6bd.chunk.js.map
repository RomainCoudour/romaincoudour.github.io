{"version":3,"sources":["components/cover/Cover.module.scss","components/about/About.module.scss","components/footer/Footer.module.scss","App.module.scss","img/avatar.svg","components/cover/Cover.js","App.js","service-worker.js","index.js"],"names":["module","exports","id","className","styles","cover__panel","cover__title","cover__occupation","cover__network","name","url","map","network","key","href","Date","now","getFullYear","stepper","index","stepper__circle","Cover","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,8BAA8B,2CAA2C,aAAe,4BAA4B,kBAAoB,iCAAiC,eAAiB,gC,gBCAvPD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,qBAAqB,kCAAkC,sBAAsB,mCAAmC,mBAAqB,kCAAkC,8BAA8B,6C,gBCAlQD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,sBAAsB,oCAAoC,kBAAoB,kCAAkC,2BAA2B,2C,gBCA3MD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,gBAAkB,+B,kBCDnED,EAAOC,QAAU,IAA0B,oC,uJCG5B,aACd,OACC,6BAASC,GAAG,QAAQC,UAAWC,IAAOC,cACrC,yBAAKF,UAAWC,IAAO,gCACtB,0BAAMD,UAAWC,IAAOE,cAAxB,iBACA,0BAAMH,UAAWC,IAAOG,mBACvB,gDADD,iBAGA,wBAAIJ,UAAWC,IAAOI,gBACpB,CACA,CACCC,KAAM,SACNC,IAAK,oCAEN,CACCD,KAAM,WACNC,IAAK,yDAEN,CACCD,KAAM,UACNC,IAAK,iDAELC,KAAI,SAACC,GAAD,OACL,wBAAIC,IAAKD,EAAQH,MAChB,uBAAGK,KAAMF,EAAQF,KAAME,EAAQH,c,iCCvBvB,aACM,IAAIM,KAAKA,KAAKC,OAAOC,cAEzC,OACC,oCACC,yBAAKd,UAAWC,IAAOc,SACrB,GAAGP,KAAI,SAACQ,GAAD,OACP,yBAAKN,IAAKM,EAAOhB,UAAWC,IAAOgB,sBAGrC,kBAACC,EAAD,QCCiBC,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCdjCC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,SDyH5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GACnCA,EAAaC,kB","file":"static/js/main.b9ddb6bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover__panel\":\"Cover_cover__panel__Hw9UU\",\"cover__centered-information\":\"Cover_cover__centered-information__2JnOB\",\"cover__title\":\"Cover_cover__title__1z4o5\",\"cover__occupation\":\"Cover_cover__occupation__1vasi\",\"cover__network\":\"Cover_cover__network__130c7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about__panel\":\"About_about__panel__3Tup0\",\"about__left-column\":\"About_about__left-column__76aef\",\"about__right-column\":\"About_about__right-column__SEdoW\",\"about__information\":\"About_about__information__UzSG9\",\"about__information--smaller\":\"About_about__information--smaller__TE2nZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer__panel\":\"Footer_footer__panel__14ZgF\",\"footer__backup-icon\":\"Footer_footer__backup-icon__3jIQw\",\"footer__copyright\":\"Footer_footer__copyright__E9LsL\",\"footer__copyright--color\":\"Footer_footer__copyright--color__M4xiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepper\":\"App_stepper__37jD3\",\"stepper__circle\":\"App_stepper__circle__19Alz\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.135f9e8e.svg\";","import React from \"react\";\r\nimport styles from \"./Cover.module.scss\";\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<section id=\"cover\" className={styles.cover__panel}>\r\n\t\t\t<div className={styles[\"cover__centered-information\"]}>\r\n\t\t\t\t<span className={styles.cover__title}>Hi I'm Romain</span>\r\n\t\t\t\t<span className={styles.cover__occupation}>\r\n\t\t\t\t\t<b>Software Engineer</b> | Full-stack\r\n\t\t\t\t</span>\r\n\t\t\t\t<ul className={styles.cover__network}>\r\n\t\t\t\t\t{[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"github\",\r\n\t\t\t\t\t\t\turl: \"https://github.com/RomainCoudour\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"linkedin\",\r\n\t\t\t\t\t\t\turl: \"https://www.linkedin.com/in/romain-coudour-51b723181/\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"contact\",\r\n\t\t\t\t\t\t\turl: \"mailto:rom.coudour@gmail.com?subject=Request\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t].map((network) => (\r\n\t\t\t\t\t\t<li key={network.name}>\r\n\t\t\t\t\t\t\t<a href={network.url}>{network.name}</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Cover, About, Footer } from \"./components\";\r\nimport styles from \"./App.module.scss\";\r\n\r\nexport default () => {\r\n\tconst currentYear = new Date(Date.now()).getFullYear();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={styles.stepper}>\r\n\t\t\t\t{[].map((index) => (\r\n\t\t\t\t\t<div key={index} className={styles.stepper__circle} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Cover />\r\n\t\t\t{/* <About year={currentYear - 1996} />\r\n\t\t\t<Footer year={currentYear} /> */}\r\n\t\t</>\r\n\t);\r\n};\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-console */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\");\r\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\");\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./service-worker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}